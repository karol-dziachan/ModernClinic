/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PersonDto from './PersonDto';
import VisitDto from './VisitDto';

/**
 * The GetUpcommingVisitDto model module.
 * @module model/GetUpcommingVisitDto
 * @version v0
 */
class GetUpcommingVisitDto {
    /**
     * Constructs a new <code>GetUpcommingVisitDto</code>.
     * @alias module:model/GetUpcommingVisitDto
     */
    constructor() { 
        
        GetUpcommingVisitDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetUpcommingVisitDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUpcommingVisitDto} obj Optional instance to populate.
     * @return {module:model/GetUpcommingVisitDto} The populated <code>GetUpcommingVisitDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUpcommingVisitDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('doctor')) {
                obj['doctor'] = PersonDto.constructFromObject(data['doctor']);
            }
            if (data.hasOwnProperty('visit')) {
                obj['visit'] = VisitDto.constructFromObject(data['visit']);
            }
            if (data.hasOwnProperty('past')) {
                obj['past'] = ApiClient.convertToType(data['past'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUpcommingVisitDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUpcommingVisitDto</code>.
     */
    static validateJSON(data) {
        // validate the optional field `doctor`
        if (data['doctor']) { // data not null
          PersonDto.validateJSON(data['doctor']);
        }
        // validate the optional field `visit`
        if (data['visit']) { // data not null
          VisitDto.validateJSON(data['visit']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
GetUpcommingVisitDto.prototype['id'] = undefined;

/**
 * @member {module:model/PersonDto} doctor
 */
GetUpcommingVisitDto.prototype['doctor'] = undefined;

/**
 * @member {module:model/VisitDto} visit
 */
GetUpcommingVisitDto.prototype['visit'] = undefined;

/**
 * @member {Boolean} past
 */
GetUpcommingVisitDto.prototype['past'] = undefined;






export default GetUpcommingVisitDto;

