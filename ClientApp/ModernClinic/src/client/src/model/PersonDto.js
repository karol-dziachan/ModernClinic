/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarkDto from './MarkDto';

/**
 * The PersonDto model module.
 * @module model/PersonDto
 * @version v0
 */
class PersonDto {
    /**
     * Constructs a new <code>PersonDto</code>.
     * @alias module:model/PersonDto
     */
    constructor() { 
        
        PersonDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersonDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonDto} obj Optional instance to populate.
     * @return {module:model/PersonDto} The populated <code>PersonDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('speciality')) {
                obj['speciality'] = ApiClient.convertToType(data['speciality'], 'String');
            }
            if (data.hasOwnProperty('rateAvg')) {
                obj['rateAvg'] = ApiClient.convertToType(data['rateAvg'], 'Number');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], ['Number']);
            }
            if (data.hasOwnProperty('opinions')) {
                obj['opinions'] = ApiClient.convertToType(data['opinions'], [MarkDto]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['speciality'] && !(typeof data['speciality'] === 'string' || data['speciality'] instanceof String)) {
            throw new Error("Expected the field `speciality` to be a primitive type in the JSON string but got " + data['speciality']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['services'])) {
            throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
        }
        if (data['opinions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['opinions'])) {
                throw new Error("Expected the field `opinions` to be an array in the JSON data but got " + data['opinions']);
            }
            // validate the optional field `opinions` (array)
            for (const item of data['opinions']) {
                MarkDto.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
PersonDto.prototype['id'] = undefined;

/**
 * @member {String} name
 */
PersonDto.prototype['name'] = undefined;

/**
 * @member {String} speciality
 */
PersonDto.prototype['speciality'] = undefined;

/**
 * @member {Number} rateAvg
 */
PersonDto.prototype['rateAvg'] = undefined;

/**
 * @member {Array.<Number>} services
 */
PersonDto.prototype['services'] = undefined;

/**
 * @member {Array.<module:model/MarkDto>} opinions
 */
PersonDto.prototype['opinions'] = undefined;






export default PersonDto;

